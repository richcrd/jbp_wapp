@model IEnumerable<jbp_wapp.Models.Vacante>
@{
    ViewData["Title"] = "Todas las Vacantes";
}

<div id="alert-container">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
</div>

<h1 class="text-center my-4">Todas las Vacantes</h1>

<div class="container mb-5">
    <!-- Formulario de Filtrado -->
    <form method="get" action="/Vacante/All" class="row g-3 align-items-end">
        <div class="col-md-4">
            <label for="keyword" class="form-label">Palabra Clave</label>
            <input type="text" id="keyword" name="keyword" value="@ViewData["keyword"]" placeholder="Buscar vacantes" class="form-control" />
        </div>
        <div class="col-md-3">
            <label for="idExp" class="form-label">Experiencia</label>
            <select id="idExp" name="idExp" class="form-select">
                <option value="">Todas las experiencias</option>
                @foreach (var item in (SelectList)ViewBag.Experiencias)
                {
                    <option value="@item.Value" selected="@(item.Selected)">@item.Text</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <label for="idProf" class="form-label">Profesión</label>
            <select id="idProf" name="idProf" class="form-select">
                <option value="">Todas las profesiones</option>
                @foreach (var item in (SelectList)ViewBag.Profesiones)
                {
                    <option value="@item.Value" selected="@(item.Selected)">@item.Text</option>
                }
            </select>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-warning w-100">Filtrar</button>
        </div>
    </form>
</div>

<div class="row row-cols-1 row-cols-md-3 g-4 mt-4">
    @if (Model != null && Model.Any())
    {
        @foreach (var vacante in Model)
        {
            <div class="col">
                <div class="card h-100 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">@vacante.Titulo</h5>
                        <p class="card-text text-truncate" style="max-height: 3.6em; overflow: hidden;">
                            @vacante.Descripcion
                        </p>
                        <p class="card-text">
                            <small class="text-muted">
                                Reclutador: @vacante.Usuario.Nombre @vacante.Usuario.Apellido
                            </small>
                        </p>
                        <div class="d-flex justify-content-between align-items-center">
                            <form method="post" action="/Vacante/Apply">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="vacanteId" value="@vacante.Id" />
                                <button type="submit" class="btn btn-primary w-100">Aplicar</button>
                            </form>
                            <button type="button" class="btn btn-outline-success btn-sm" onclick="openVacanteModal(@vacante.Id)">
                                Detalles
                                </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12 text-center">
            <p class="text-muted text-center">No hay vacantes disponibles con los criterios seleccionados.</p>
        </div>
    }
</div>

@Html.Partial("ModalVacante")

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const alertContainer = document.getElementById("alert-container");

        // Manejar mensajes en el cliente (opcional)
        if (alertContainer) {
            setTimeout(() => {
                const alerts = alertContainer.querySelectorAll(".alert");
                alerts.forEach(alert => {
                    const bootstrapAlert = new bootstrap.Alert(alert);
                    bootstrapAlert.close();
                });
            }, 5000); // Ocultar automáticamente después de 5 segundos
        }
    });
</script>

